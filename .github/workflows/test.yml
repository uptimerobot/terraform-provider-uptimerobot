name: Test

on:
  push:
    branches:
      - 'main'
    paths:
      - '**'
      - '!**/.gitignore'
      - '!**/*.md'
      - '!LICENSE'
      - '!.github/**'
      - '.github/workflows/test.yml'

  pull_request:
    paths:
      - '**'
      - '!**/.gitignore'
      - '!**/*.md'
      - '!LICENSE'
      - '!.github/**'
      - '.github/workflows/test.yml'

  workflow_dispatch:

permissions:
  contents: read

jobs:
  validate:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Check Modules Integrity
        run: go mod verify

      - name: Lint Code
        uses: golangci/golangci-lint-action@v8
        with:
          version: 'latest'

  documentation:
    timeout-minutes: 5
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Generate Documentation
        run: go generate ./...

      - name: Validate Documentation
        run: git diff --compact-summary --exit-code || (echo -e "\nDocumentation is out of sync. Run 'go generate ./...' to update and commit the changes." && exit 1)

  acceptance:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        include:
          - app: terraform
            version: 'latest'
          - app: terraform
            version: '1.11.x'
          - app: opentofu
            version: 'latest'
          - app: opentofu
            version: 'v1.9.x'
          - app: opentofu
            version: 'v1.8.x'

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Setup Terraform
        if: matrix.app == 'terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ matrix.version }}
          terraform_wrapper: false

      - name: Setup OpenTofu
        if: matrix.app == 'opentofu'
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ matrix.version }}
          tofu_wrapper: false

      - name: Configure OpenTofu Environment
        if: matrix.app == 'opentofu'
        run: |
          echo TF_ACC_PROVIDER_HOST="registry.opentofu.org" >> $GITHUB_ENV
          echo TF_ACC_PROVIDER_NAMESPACE="hashicorp" >> $GITHUB_ENV
          echo TF_ACC_TERRAFORM_PATH="$(which tofu)" >> $GITHUB_ENV


      - name: Test Provider
        run: go test -v -cover ./internal/provider
        env:
          TF_ACC: '1'
          UPTIMEROBOT_API_KEY: 'test'
          UPTIMEROBOT_ORGANIZATION_ID: '1'
